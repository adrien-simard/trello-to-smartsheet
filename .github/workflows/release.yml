name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable
      run: |
        python build_lightweight.py

    - name: Get version
      id: version
      run: |
        echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      shell: bash

    - name: Create release notes
      run: |
        echo "# Trello to Smartsheet Migration Tool" > release_notes.md
        echo "" >> release_notes.md
        echo "## What's New" >> release_notes.md
        echo "" >> release_notes.md
        echo "See [CHANGES.md](CHANGES.md) for detailed changelog." >> release_notes.md
        echo "" >> release_notes.md
        echo "## Installation" >> release_notes.md
        echo "" >> release_notes.md
        echo "1. Download \`TrelloToSmartsheet.exe\`" >> release_notes.md
        echo "2. Run the executable (no installation needed)" >> release_notes.md
        echo "3. Follow the on-screen instructions" >> release_notes.md
        echo "" >> release_notes.md
        echo "## Requirements" >> release_notes.md
        echo "" >> release_notes.md
        echo "- Windows 10 or later" >> release_notes.md
        echo "- Smartsheet API token" >> release_notes.md
        echo "- Trello board exported as JSON" >> release_notes.md
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: TrelloToSmartsheet-Windows
        path: dist/TrelloToSmartsheet.exe

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/TrelloToSmartsheet.exe
        body_path: release_notes.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
